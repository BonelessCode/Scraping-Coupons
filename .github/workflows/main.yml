name: Daily Email Notification

on:
  schedule:
    - cron: '0 9 * * *'  # Runs daily at 09:00 UTC
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4

      - name: Run script
        id: run_script
        run: |
          python scrapper.py
        continue-on-error: true

      #- name: Check for content changes
      #  id: check_changes
      #  run: |
      #    if [ -f previous_content.txt ]; then
      #      if diff last_content.txt previous_content.txt > /dev/null; then
      #        echo "No changes detected"
      #        echo "diff=false" >> $GITHUB_ENV
      #      else
      #        echo "Changes detected"
      #        echo "diff=true" >> $GITHUB_ENV
      #      fi
      #    else
      #      echo "No previous content to compare"
      #      echo "diff=true" >> $GITHUB_ENV
      #    fi
      #  continue-on-error: true

      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp-mail.outlook.com
          server_port: 25
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          to: ${{ secrets.EMAIL_USERNAME_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
          subject: CottonCarrier Coupon Daily Update - Set Up By STEVEN BRADLEY
          body: |
            This is your daily email notification.
            Content from the Python script:
            Code: ${{ env.FIRST_CONTENT }}
            Description: ${{ env.SECOND_CONTENT }}
        continue-on-error: true

      - name: Envoyer une notification Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"Mise Ã  jour des coupons CottonCarrier\nCode: ${{ env.FIRST_CONTENT }}\nDescription: ${{ env.SECOND_CONTENT }}"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}



      #- name: Save current content for next run
      #  run: |
      #      if [ -f last_content.txt ]; then
      #          cp last_content.txt previous_content.txt
      #      else
      #          echo "last_content.txt does not exist. Skipping copy."
      #      fi
